# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mPpJeB3tIwIzt2W1IDJBTajVaLabnIps
"""

from datetime import date, datetime
from typing import Dict, Any, Optional, Union
import requests

BASE_URL = "https://api.frankfurter.app"

def _iso(d: Union[str, date, datetime]) -> str:
    if isinstance(d, str):
        return d[:10]
    if isinstance(d, datetime):
        return d.date().isoformat()
    if isinstance(d, date):
        return d.isoformat()
    raise ValueError("Invalid date")

def _get(path: str, params: Optional[Dict[str, Any]] = None, timeout: float = 8.0) -> Dict[str, Any]:
    r = requests.get(f"{BASE_URL}{path}", params=params or {}, timeout=timeout)
    r.raise_for_status()
    return r.json()

def get_currencies() -> Dict[str, str]:
    return _get("/currencies")

def get_latest_rate(base: str, target: str) -> float:
    if not base or not target:
        raise ValueError("base/target required")
    data = _get("/latest", params={"from": base, "to": target})
    rate = data.get("rates", {}).get(target)
    if rate is None:
        raise ValueError("rate not found")
    return float(rate)

def get_historical_rate(on_date: Union[str, date, datetime], base: str, target: str) -> float:
    if not base or not target:
        raise ValueError("base/target required")
    day = _iso(on_date)
    data = _get(f"/{day}", params={"from": base, "to": target})
    rate = data.get("rates", {}).get(target)
    if rate is None:
        raise ValueError("rate not found")
    return float(rate)