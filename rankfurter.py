# -*- coding: utf-8 -*-
"""DSP for Assignment2 - API step 3 frankfurter.py .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f3iLDiRTPEy53-pKsGaQGaH7zgZBq8Xb
"""

from __future__ import annotations

from google.colab import drive
drive.mount('/content/drive')

import sys
import os

# Path to the folder containing api.py in your Drive
drive_module_path = '/content/drive/MyDrive/Colab Notebooks/DS for practice/DSP Assign 2/'

# Add the directory to the Python path
if os.path.exists(drive_module_path):
    # Ensure the path is not already in sys.path to avoid duplicates
    if drive_module_path not in sys.path:
        sys.path.append(drive_module_path)
        print(f"Added {drive_module_path} to Python path.")
    else:
        print(f"Path {drive_module_path} is already in Python path.")
else:
    print(f"Directory not found: {drive_module_path}")

# Now you can try importing api
try:
    import api
    print("Successfully imported api.py")
except ModuleNotFoundError:
    print("Error: api.py not found in the specified directory.")
    print("Please check the path and make sure api.py exists there.")

import sys
import os

# Now you can try importing api
import api

sys.path

# frankfurter.py
"""
Business-level helpers for Frankfurter API.

This module:
- exposes a clean interface for app.py
- validates inputs lightly
- extracts single float rates from raw JSON
"""

from __future__ import annotations

from datetime import date, datetime
from functools import lru_cache
from typing import Dict, Any, Union

import api


class FrankfurterError(RuntimeError):
    """Errors specific to frankfurter helpers."""
    pass